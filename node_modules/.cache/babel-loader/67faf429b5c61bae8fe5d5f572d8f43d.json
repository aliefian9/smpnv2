{"ast":null,"code":"import ascending from \"./ascending.js\";\nexport default function sort(values) {\n  var comparator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ascending;\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  return Array.from(values).sort(comparator);\n}","map":{"version":3,"sources":["H:/KULIAH/ReactJS/Login/New folder/node_modules/d3-array/src/sort.js"],"names":["ascending","sort","values","comparator","Symbol","iterator","TypeError","Array","from"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;AAEA,eAAe,SAASC,IAAT,CAAcC,MAAd,EAA8C;AAAA,MAAxBC,UAAwB,uEAAXH,SAAW;AAC3D,MAAI,OAAOE,MAAM,CAACE,MAAM,CAACC,QAAR,CAAb,KAAmC,UAAvC,EAAmD,MAAM,IAAIC,SAAJ,CAAc,wBAAd,CAAN;AACnD,SAAOC,KAAK,CAACC,IAAN,CAAWN,MAAX,EAAmBD,IAAnB,CAAwBE,UAAxB,CAAP;AACD","sourcesContent":["import ascending from \"./ascending.js\";\r\n\r\nexport default function sort(values, comparator = ascending) {\r\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\r\n  return Array.from(values).sort(comparator);\r\n}\r\n"]},"metadata":{},"sourceType":"module"}