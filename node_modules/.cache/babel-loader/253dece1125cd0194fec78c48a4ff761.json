{"ast":null,"code":"import axios from \"axios\";\nimport React from 'react';\nexport const GET_BARANG_LIST = \"GET_BARANG_LIST\";\nexport const GET_ANALITIK_LIST = \"GET_ANALITIK_LIST\";\nstate = {\n  persons: []\n};\nexport const getBarangList = () => {\n  let url = \"https://smpnapi.herokuapp.com/api/v3/inventory/\";\n  return dispatch => {\n    axios.get(url).then(function (response) {\n      dispatch({\n        type: GET_BARANG_LIST,\n        payload: {\n          data: response.data.Inventory,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_BARANG_LIST,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};\nexport const getAnalitikList = () => {\n  let url = \"https://smpnapi.herokuapp.com/api/v3/logging/\";\n  return dispatch => {\n    axios.get(url).then(function (response) {\n      dispatch({\n        type: GET_ANALITIK_LIST,\n        payload: {\n          dataAnalitik: response.data.logging,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_ANALITIK_LIST,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};\nexport const getUserList = () => {\n  let url = \"https://smpnapi.herokuapp.com/api/v3/users/\";\n  return dispatch => {\n    axios.get(url).then(res => {\n      const persons = res.data.user;\n      this.setState({\n        persons\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_ANALITIK_LIST,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["H:/KULIAH/ReactJS/frontend1/src/Action/BarangAction.js"],"names":["axios","React","GET_BARANG_LIST","GET_ANALITIK_LIST","state","persons","getBarangList","url","dispatch","get","then","response","type","payload","data","Inventory","errorMessage","catch","error","message","getAnalitikList","dataAnalitik","logging","getUserList","res","user","setState"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,iBAAxB;AACP,OAAO,MAAMC,iBAAiB,GAAG,mBAA1B;AAEPC,KAAK,GAAG;AACNC,EAAAA,OAAO,EAAE;AADH,CAAR;AAKA,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,MAAIC,GAAG,GAAG,iDAAV;AACA,SAAQC,QAAD,IAAc;AACnBR,IAAAA,KAAK,CACFS,GADH,CACOF,GADP,EAEGG,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACtBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEV,eADC;AAEPW,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAEH,QAAQ,CAACG,IAAT,CAAcC,SADb;AAEPC,UAAAA,YAAY,EAAE;AAFP;AAFF,OAAD,CAAR;AAOH,KAVH,EAWGC,KAXH,CAWS,UAAUC,KAAV,EAAiB;AACtBV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAEV,eADC;AAEPW,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,KADC;AAEPE,UAAAA,YAAY,EAAEE,KAAK,CAACC;AAFb;AAFF,OAAD,CAAR;AAOD,KAnBH;AAoBD,GArBD;AAsBD,CAxBM;AA2BP,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,MAAIb,GAAG,GAAG,+CAAV;AACA,SAAQC,QAAD,IAAc;AACnBR,IAAAA,KAAK,CACFS,GADH,CACOF,GADP,EAEGG,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACtBH,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,iBADC;AAEPU,QAAAA,OAAO,EAAE;AACPQ,UAAAA,YAAY,EAAEV,QAAQ,CAACG,IAAT,CAAcQ,OADrB;AAEPN,UAAAA,YAAY,EAAE;AAFP;AAFF,OAAD,CAAR;AAOH,KAVH,EAWGC,KAXH,CAWS,UAAUC,KAAV,EAAiB;AACtBV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,iBADC;AAEPU,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,KADC;AAEPE,UAAAA,YAAY,EAAEE,KAAK,CAACC;AAFb;AAFF,OAAD,CAAR;AAOD,KAnBH;AAoBD,GArBD;AAsBD,CAxBM;AA0BP,OAAO,MAAMI,WAAW,GAAG,MAAM;AAC/B,MAAIhB,GAAG,GAAG,6CAAV;AAEA,SAAQC,QAAD,IAAc;AACnBR,IAAAA,KAAK,CACFS,GADH,CACOF,GADP,EAEGG,IAFH,CAEQc,GAAG,IAAI;AACX,YAAMnB,OAAO,GAAGmB,GAAG,CAACV,IAAJ,CAASW,IAAzB;AACA,WAAKC,QAAL,CAAc;AAAErB,QAAAA;AAAF,OAAd;AACD,KALH,EAMGY,KANH,CAMS,UAAUC,KAAV,EAAiB;AACtBV,MAAAA,QAAQ,CAAC;AACPI,QAAAA,IAAI,EAAET,iBADC;AAEPU,QAAAA,OAAO,EAAE;AACPC,UAAAA,IAAI,EAAE,KADC;AAEPE,UAAAA,YAAY,EAAEE,KAAK,CAACC;AAFb;AAFF,OAAD,CAAR;AAOD,KAdH;AAeD,GAhBD;AAiBD,CApBM","sourcesContent":["import axios from \"axios\";\r\nimport React from 'react';\r\n\r\nexport const GET_BARANG_LIST = \"GET_BARANG_LIST\";\r\nexport const GET_ANALITIK_LIST = \"GET_ANALITIK_LIST\";\r\n\r\nstate = {\r\n  persons: []\r\n}\r\n\r\n\r\nexport const getBarangList = () => {\r\n  let url = \"https://smpnapi.herokuapp.com/api/v3/inventory/\"\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url)\r\n      .then(function (response) {\r\n          dispatch({\r\n            type: GET_BARANG_LIST,\r\n            payload: {\r\n              data: response.data.Inventory,\r\n              errorMessage: false,\r\n            },\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_BARANG_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport const getAnalitikList = () => {\r\n  let url = \"https://smpnapi.herokuapp.com/api/v3/logging/\";\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url)\r\n      .then(function (response) {\r\n          dispatch({\r\n            type: GET_ANALITIK_LIST,\r\n            payload: {\r\n              dataAnalitik: response.data.logging,\r\n              errorMessage: false,\r\n            },\r\n          });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_ANALITIK_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getUserList = () => {\r\n  let url = \"https://smpnapi.herokuapp.com/api/v3/users/\";\r\n  \r\n  return (dispatch) => {\r\n    axios\r\n      .get(url)\r\n      .then(res => {\r\n        const persons = res.data.user;\r\n        this.setState({ persons });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_ANALITIK_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}