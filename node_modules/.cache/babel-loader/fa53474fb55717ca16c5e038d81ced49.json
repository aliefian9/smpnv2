{"ast":null,"code":"import axios from \"axios\";\nexport const GET_INVENTORY_LIST = \"GET_INVENTORY_LIST\";\nexport const GET_INVENTORY_DETAIL = \"GET_INVENTORY_DETAIL\";\nexport const POST_INVENTORY_CREATE = \"POST_INVENTORY_CREATE\";\nexport const PUT_INVENTORY_EDIT = \"PUT_INVENTORY_EDIT\";\nexport const GET_LOGGING_LIST = 'GET_LOGGING_LIST';\nlet url = \"https://smpnapi.herokuapp.com/api/v3/\";\nlet header = {\n  headers: {\n    Authorization: `JWT ${localStorage.getItem('token')}`\n  }\n}; //MUNCULIN LIST DATA INVENTORY\n\nexport const getInventoryList = () => {\n  return dispatch => {\n    axios.get(url + 'inventory/', header).then(function (response) {\n      dispatch({\n        type: GET_INVENTORY_LIST,\n        payload: {\n          data: response.data.Inventory,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_INVENTORY_LIST,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n}; //MUNCULIN LIST DATA LOGGING IN ATAU OUT\n\nexport const getLoggingList = () => {\n  return dispatch => {\n    axios.get(url + 'logging/', header).then(function (response) {\n      dispatch({\n        type: GET_LOGGING_LIST,\n        payload: {\n          data: response.data.logging,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_LOGGING_LIST,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n}; //BUAT DETAIL DATA 1 INVENTORY\n\nexport const getInventoryDetail = logical_uid => {\n  return dispatch => {\n    axios.get(url + 'inventory/detail/' + logical_uid, header).then(function (response) {\n      console.log(response);\n      dispatch({\n        type: GET_INVENTORY_DETAIL,\n        payload: {\n          data: response.data,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_INVENTORY_DETAIL,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};\nexport const postInventoryCreate = data => {\n  return dispatch => {\n    axios.post(url + 'inventory/', data, header).then(function (response) {\n      console.log(response);\n      dispatch({\n        type: POST_INVENTORY_CREATE,\n        payload: {\n          data: response.data,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: POST_INVENTORY_CREATE,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};\nexport const deleteInventory = logical_uid => {\n  return dispatch => {\n    axios.delete(url + 'inventory/delete/' + logical_uid, header).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport const deleteDataInventory = () => {\n  return dispatch => {\n    dispatch({\n      type: GET_INVENTORY_DETAIL,\n      payload: {\n        data: false,\n        errorMessage: false\n      }\n    });\n    dispatch({\n      type: POST_INVENTORY_CREATE,\n      payload: {\n        data: false,\n        errorMessage: false\n      }\n    });\n  };\n};\nexport const putInventoryUpdate = (dataform, logical_uid) => {\n  return dispatch => {\n    axios.put(url + 'inventory/update/' + logical_uid, dataform, header).then(function (response) {\n      console.log(response);\n      dispatch({\n        type: PUT_INVENTORY_EDIT,\n        payload: {\n          data: response.data.inventory,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: PUT_INVENTORY_EDIT,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["H:/KULIAH/ReactJS/Login/frontend2/src/actions/inventoryAction.js"],"names":["axios","GET_INVENTORY_LIST","GET_INVENTORY_DETAIL","POST_INVENTORY_CREATE","PUT_INVENTORY_EDIT","GET_LOGGING_LIST","url","header","headers","Authorization","localStorage","getItem","getInventoryList","dispatch","get","then","response","type","payload","data","Inventory","errorMessage","catch","error","message","getLoggingList","logging","getInventoryDetail","logical_uid","console","log","postInventoryCreate","post","deleteInventory","delete","deleteDataInventory","putInventoryUpdate","dataform","put","inventory"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_INVENTORY_LIST = \"GET_INVENTORY_LIST\";\r\nexport const GET_INVENTORY_DETAIL = \"GET_INVENTORY_DETAIL\";\r\nexport const POST_INVENTORY_CREATE = \"POST_INVENTORY_CREATE\";\r\nexport const PUT_INVENTORY_EDIT = \"PUT_INVENTORY_EDIT\";\r\nexport const GET_LOGGING_LIST = 'GET_LOGGING_LIST';\r\n\r\nlet url = \"https://smpnapi.herokuapp.com/api/v3/\";\r\nlet header = {\r\n  headers: {\r\n    Authorization: `JWT ${localStorage.getItem('token')}`\r\n  }\r\n}\r\n\r\n//MUNCULIN LIST DATA INVENTORY\r\nexport const getInventoryList = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + 'inventory/', header)\r\n      .then(function (response) {\r\n        dispatch({\r\n          type: GET_INVENTORY_LIST,\r\n          payload: {\r\n            data: response.data.Inventory,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_INVENTORY_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n//MUNCULIN LIST DATA LOGGING IN ATAU OUT\r\nexport const getLoggingList = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + 'logging/', header)\r\n      .then(function (response) {\r\n        dispatch({\r\n          type: GET_LOGGING_LIST,\r\n          payload: {\r\n            data: response.data.logging,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_LOGGING_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\n//BUAT DETAIL DATA 1 INVENTORY\r\nexport const getInventoryDetail = (logical_uid) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + 'inventory/detail/' +  logical_uid, header)\r\n      .then(function (response) {\r\n        console.log(response)\r\n        dispatch({\r\n          type: GET_INVENTORY_DETAIL,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_INVENTORY_DETAIL,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const postInventoryCreate = (data) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(url + 'inventory/',data,header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n\r\n        dispatch({\r\n          type: POST_INVENTORY_CREATE,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: POST_INVENTORY_CREATE,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteInventory = (logical_uid) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(url + 'inventory/delete/' + logical_uid, header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteDataInventory = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: GET_INVENTORY_DETAIL,\r\n      payload: {\r\n        data: false,\r\n        errorMessage: false,\r\n      },\r\n    });\r\n\r\n    dispatch({\r\n      type: POST_INVENTORY_CREATE,\r\n      payload: {\r\n        data: false,\r\n        errorMessage: false,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const putInventoryUpdate = (dataform, logical_uid) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .put(url + 'inventory/update/' + logical_uid, dataform, header)\r\n      .then(function (response) {\r\n        console.log(response);\r\n\r\n        dispatch({\r\n          type: PUT_INVENTORY_EDIT,\r\n          payload: {\r\n            data: response.data.inventory,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: PUT_INVENTORY_EDIT,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}