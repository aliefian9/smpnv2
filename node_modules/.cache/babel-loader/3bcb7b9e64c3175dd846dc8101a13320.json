{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\KULIAH\\\\ReactJS\\\\Login\\\\frontend2\\\\src\\\\components\\\\AnalitikComponent.js\";\nimport React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\nimport { Card } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nvar today = new Date(),\n    date = today.getDay() + \" - \" + today.getDate() + \" - \" + (today.getMonth() + 1) + \" - \" + today.getFullYear(),\n    time = today.getHours() + \" : \" + today.getUTCMinutes();\nconst {\n  SearchBar\n} = Search;\nconst defaultSorted = [{\n  dataField: \"logical_uid\",\n  order: \"asc\"\n}];\n\nconst mapStateToProps = state => {\n  return {\n    getLoggingList: state.inventorys.getLoggingList,\n    errorLoggingList: state.inventorys.errorLoggingList,\n    HitungLogging: state.inventorys.getLoggingList.length,\n    today: new Date(),\n    date: today.getHours()\n  };\n};\n\nconst AnalitikComponent = props => {\n  const JumlahLogging = /*#__PURE__*/_jsxDEV(Card, {\n    style: {\n      width: \"18rem\"\n    },\n    children: /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"JUMLAH LOGGING\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        children: [date, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), time, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 18\n        }, this), props.HitungLogging]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  const columns = [{\n    dataField: \"id\",\n    text: \"id\",\n    sort: true,\n    headerStyle: () => {\n      return {\n        width: \"15%\"\n      };\n    }\n  }, {\n    dataField: \"status\",\n    text: \"Status\",\n    sort: true\n  }, {\n    dataField: \"qty\",\n    text: \"Jumlah\",\n    sort: true\n  }, {\n    dataField: \"time\",\n    text: \"Waktu\",\n    sort: true\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: props.getLoggingList ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(ToolkitProvider, {\n        bootstrap4: true,\n        keyField: \"id\",\n        data: props.getLoggingList,\n        columns: columns,\n        defaultSorted: defaultSorted,\n        search: true,\n        children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"float-right\",\n                children: /*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n                  placeholder: \"Cari..\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n            pagination: paginationFactory()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: JumlahLogging\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: props.errorLoggingList ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.errorLoggingList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n        color: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AnalitikComponent;\nexport default connect(mapStateToProps, null)(AnalitikComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalitikComponent\");","map":{"version":3,"sources":["H:/KULIAH/ReactJS/Login/frontend2/src/components/AnalitikComponent.js"],"names":["React","BootstrapTable","paginationFactory","ToolkitProvider","Search","Container","Row","Col","Spinner","Card","connect","today","Date","date","getDay","getDate","getMonth","getFullYear","time","getHours","getUTCMinutes","SearchBar","defaultSorted","dataField","order","mapStateToProps","state","getLoggingList","inventorys","errorLoggingList","HitungLogging","length","AnalitikComponent","props","JumlahLogging","width","columns","text","sort","headerStyle","searchProps","baseProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\n\r\nimport { Container, Row, Col, Spinner } from \"reactstrap\";\r\nimport { Card } from \"react-bootstrap\";\r\n\r\nimport { connect } from \"react-redux\";\r\nvar today = new Date(),\r\n  date =  today.getDay() + \" - \" +  today.getDate() + \" - \" + (today.getMonth() + 1) + \" - \" + today.getFullYear(),\r\n  time = today.getHours() + \" : \" + today.getUTCMinutes();\r\n\r\nconst { SearchBar } = Search;\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"logical_uid\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getLoggingList: state.inventorys.getLoggingList,\r\n    errorLoggingList: state.inventorys.errorLoggingList,\r\n    HitungLogging: state.inventorys.getLoggingList.length,\r\n    today: new Date(),\r\n    date: today.getHours(),\r\n  };\r\n};\r\n\r\nconst AnalitikComponent = (props) => {\r\n  const JumlahLogging = (\r\n    <Card style={{ width: \"18rem\" }}>\r\n      <Card.Body className=\"text-center\">\r\n        <Card.Title>JUMLAH LOGGING</Card.Title>\r\n        <Card.Text>\r\n          {date}\r\n          <br />\r\n          {time} <br />\r\n          {props.HitungLogging}\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      dataField: \"id\",\r\n      text: \"id\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"15%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"status\",\r\n      text: \"Status\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"qty\",\r\n      text: \"Jumlah\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"time\",\r\n      text: \"Waktu\",\r\n      sort: true,\r\n    },\r\n  ];\r\n  return (\r\n    <Container>\r\n      {props.getLoggingList ? (\r\n        <div>\r\n          <ToolkitProvider\r\n            bootstrap4\r\n            keyField=\"id\"\r\n            data={props.getLoggingList}\r\n            columns={columns}\r\n            defaultSorted={defaultSorted}\r\n            search\r\n          >\r\n            {(props) => (\r\n              <div>\r\n                <Row>\r\n                  <Col>\r\n                    <div className=\"float-right\">\r\n                      <SearchBar {...props.searchProps} placeholder=\"Cari..\" />\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n                <BootstrapTable\r\n                  {...props.baseProps}\r\n                  pagination={paginationFactory()}\r\n                />\r\n              </div>\r\n            )}\r\n          </ToolkitProvider>\r\n          <div>{JumlahLogging}</div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorLoggingList ? (\r\n            <h4>{props.errorLoggingList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AnalitikComponent);\r\n"]},"metadata":{},"sourceType":"module"}