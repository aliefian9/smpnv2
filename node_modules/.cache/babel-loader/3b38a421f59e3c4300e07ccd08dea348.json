{"ast":null,"code":"import axios from \"axios\";\nexport const GET_INVENTORY_LIST = \"GET_INVENTORY_LIST\";\nexport const GET_INVENTORY_DETAIL = \"GET_INVENTORY_DETAIL\";\nexport const POST_INVENTORY_CREATE = \"POST_INVENTORY_CREATE\";\nexport const PUT_INVENTORY_EDIT = \"PUT_INVENTORY_EDIT\";\nexport const POST_USER_LOGIN = \"POST_USER_LOGIN\";\nlet url = \"https://smpnapi.herokuapp.com/api/v3/\";\nexport const getInventoryList = () => {\n  return dispatch => {\n    axios.get(url + 'inventory', {\n      headers: {\n        Authorization: `JWT ${localStorage.getItem('token')}`\n      }\n    }).then(function (response) {\n      dispatch({\n        type: GET_INVENTORY_LIST,\n        payload: {\n          data: response.data.Inventory,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_INVENTORY_LIST,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};\nexport const getInventoryDetail = logical_uid => {\n  return dispatch => {\n    axios.get(url + 'inventory/' + logical_uid).then(function (response) {\n      dispatch({\n        type: GET_INVENTORY_DETAIL,\n        payload: {\n          data: response.data,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: GET_INVENTORY_DETAIL,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};\nexport const postInventoryCreate = data => {\n  return dispatch => {\n    axios.post(\"https://my-json-server.typicode.com/aliefian9/FakeApiTypecode/inventory/\", data).then(function (response) {\n      console.log(response);\n      dispatch({\n        type: POST_INVENTORY_CREATE,\n        payload: {\n          data: response.data,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: POST_INVENTORY_CREATE,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};\nexport const deleteInventory = id => {\n  return dispatch => {\n    axios.delete(\"https://my-json-server.typicode.com/aliefian9/FakeApiTypecode/inventory/\" + id).then(function (response) {\n      console.log(response);\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n};\nexport const deleteDataInventory = () => {\n  return dispatch => {\n    dispatch({\n      type: GET_INVENTORY_DETAIL,\n      payload: {\n        data: false,\n        errorMessage: false\n      }\n    });\n    dispatch({\n      type: POST_INVENTORY_CREATE,\n      payload: {\n        data: false,\n        errorMessage: false\n      }\n    });\n  };\n};\nexport const putInventoryUpdate = (data, id) => {\n  return dispatch => {\n    axios.put(\"https://my-json-server.typicode.com/aliefian9/FakeApiTypecode/inventory/\" + id, data).then(function (response) {\n      console.log(response);\n      dispatch({\n        type: PUT_INVENTORY_EDIT,\n        payload: {\n          data: response.data,\n          errorMessage: false\n        }\n      });\n    }).catch(function (error) {\n      dispatch({\n        type: PUT_INVENTORY_EDIT,\n        payload: {\n          data: false,\n          errorMessage: error.message\n        }\n      });\n    });\n  };\n};\nexport const postUserLogin = () => {\n  return dispatch => {\n    axios({\n      method: \"post\",\n      url: \"https://smpnapi.herokuapp.com/token-auth/\",\n      data: {\n        username: \"aliefian\",\n        password: \"Asus1234\"\n      }\n    });\n  };\n};\nexport const getUserLogin = () => {\n  axios.get(\"https://smpnapi.herokuapp.com/api/v3/users/\").then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\n}; // export const handle_login = (e, data) => {\n//   e.preventDefault();\n//   fetch('https://my-json-server.typicode.com/aliefian9/FakeApiTypecode/db', {\n//     method: 'POST',\n//     headers: {\n//       'Content-Type': 'application/json'\n//     },\n//     body: JSON.stringify(data)\n//   })\n//     .then(res => res.json())\n//     .then(json => {\n//       localStorage.setItem('token', json.token);\n//       this.setState({\n//         logged_in: true,\n//         username: json.profile.nama\n//       });\n//     });\n// };","map":{"version":3,"sources":["H:/KULIAH/ReactJS/Login/frontend2/src/actions/inventoryAction.js"],"names":["axios","GET_INVENTORY_LIST","GET_INVENTORY_DETAIL","POST_INVENTORY_CREATE","PUT_INVENTORY_EDIT","POST_USER_LOGIN","url","getInventoryList","dispatch","get","headers","Authorization","localStorage","getItem","then","response","type","payload","data","Inventory","errorMessage","catch","error","message","getInventoryDetail","logical_uid","postInventoryCreate","post","console","log","deleteInventory","id","delete","deleteDataInventory","putInventoryUpdate","put","postUserLogin","method","username","password","getUserLogin","status","statusText","config"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\n\r\nexport const GET_INVENTORY_LIST = \"GET_INVENTORY_LIST\";\r\nexport const GET_INVENTORY_DETAIL = \"GET_INVENTORY_DETAIL\";\r\nexport const POST_INVENTORY_CREATE = \"POST_INVENTORY_CREATE\";\r\nexport const PUT_INVENTORY_EDIT = \"PUT_INVENTORY_EDIT\";\r\nexport const POST_USER_LOGIN = \"POST_USER_LOGIN\";\r\n\r\nlet url = \"https://smpnapi.herokuapp.com/api/v3/\";\r\n\r\nexport const getInventoryList = () => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + 'inventory',  {\r\n        headers: {\r\n          Authorization: `JWT ${localStorage.getItem('token')}`\r\n        }\r\n      })\r\n      .then(function (response) {\r\n        dispatch({\r\n          type: GET_INVENTORY_LIST,\r\n          payload: {\r\n            data: response.data.Inventory,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_INVENTORY_LIST,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const getInventoryDetail = (logical_uid) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .get(url + 'inventory/' +  logical_uid\r\n      )\r\n      .then(function (response) {\r\n        dispatch({\r\n          type: GET_INVENTORY_DETAIL,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: GET_INVENTORY_DETAIL,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const postInventoryCreate = (data) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .post(\r\n        \"https://my-json-server.typicode.com/aliefian9/FakeApiTypecode/inventory/\",\r\n        data\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n\r\n        dispatch({\r\n          type: POST_INVENTORY_CREATE,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: POST_INVENTORY_CREATE,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteInventory = (id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .delete(\r\n        \"https://my-json-server.typicode.com/aliefian9/FakeApiTypecode/inventory/\" +\r\n          id\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n};\r\n\r\nexport const deleteDataInventory = () => {\r\n  return (dispatch) => {\r\n    dispatch({\r\n      type: GET_INVENTORY_DETAIL,\r\n      payload: {\r\n        data: false,\r\n        errorMessage: false,\r\n      },\r\n    });\r\n\r\n    dispatch({\r\n      type: POST_INVENTORY_CREATE,\r\n      payload: {\r\n        data: false,\r\n        errorMessage: false,\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const putInventoryUpdate = (data, id) => {\r\n  return (dispatch) => {\r\n    axios\r\n      .put(\r\n        \"https://my-json-server.typicode.com/aliefian9/FakeApiTypecode/inventory/\" +\r\n          id,\r\n        data\r\n      )\r\n      .then(function (response) {\r\n        console.log(response);\r\n\r\n        dispatch({\r\n          type: PUT_INVENTORY_EDIT,\r\n          payload: {\r\n            data: response.data,\r\n            errorMessage: false,\r\n          },\r\n        });\r\n      })\r\n      .catch(function (error) {\r\n        dispatch({\r\n          type: PUT_INVENTORY_EDIT,\r\n          payload: {\r\n            data: false,\r\n            errorMessage: error.message,\r\n          },\r\n        });\r\n      });\r\n  };\r\n};\r\n\r\nexport const postUserLogin = () => {\r\n  return (dispatch) => {\r\n    axios({\r\n      method: \"post\",\r\n      url: \"https://smpnapi.herokuapp.com/token-auth/\",\r\n      data: {\r\n        username: \"aliefian\",\r\n        password: \"Asus1234\",\r\n      },\r\n    });\r\n  };\r\n};\r\n\r\nexport const getUserLogin = () => {\r\n  axios.get(\"https://smpnapi.herokuapp.com/api/v3/users/\").then(function (response) {\r\n    console.log(response.data);\r\n    console.log(response.status);\r\n    console.log(response.statusText);\r\n    console.log(response.headers);\r\n    console.log(response.config);\r\n  });\r\n};\r\n\r\n// export const handle_login = (e, data) => {\r\n//   e.preventDefault();\r\n//   fetch('https://my-json-server.typicode.com/aliefian9/FakeApiTypecode/db', {\r\n//     method: 'POST',\r\n//     headers: {\r\n//       'Content-Type': 'application/json'\r\n//     },\r\n//     body: JSON.stringify(data)\r\n//   })\r\n//     .then(res => res.json())\r\n//     .then(json => {\r\n//       localStorage.setItem('token', json.token);\r\n//       this.setState({\r\n//         logged_in: true,\r\n//         username: json.profile.nama\r\n//       });\r\n//     });\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}