{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\KULIAH\\\\ReactJS\\\\Login\\\\frontend2\\\\src\\\\components\\\\AnalitikComponent.js\";\nimport React from \"react\";\nimport { Spinner } from \"reactstrap\";\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\nimport { deleteLogging } from \"../actions/inventoryAction\";\n\nconst handleClick = (dispatch, id) => {\n  swal({\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true\n  }).then(willDelete => {\n    if (willDelete) {\n      dispatch(deleteLogging(id));\n      swal(\"Data Inventory Sukses dihapus\", {\n        icon: \"success\"\n      });\n    } else {\n      swal(\"Data gagal dihapus\");\n    }\n  });\n};\n\nconst {\n  SearchBar\n} = Search;\nconst defaultSorted = [{\n  dataField: \"id\",\n  order: \"asc\"\n}];\n\nconst mapStateToProps = state => {\n  return {\n    getInventoryList: state.inventorys.getInventoryList,\n    errorInventoryList: state.inventorys.errorInventoryList,\n    HitungInventory: state.inventorys.getInventoryList.length\n  };\n};\n\nconst AnalitikComponent = props => {\n  let x = 0;\n  var y = \"{props.getInventoryList[0].qty}\";\n\n  for (let i = 0; i < props.HitungInventory; i++) {\n    x = x + props.getInventoryList[i].qty;\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: props.getInventoryList ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"JUMLAH BARANG YANG DIBAWAH 50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [x, \" : \", x]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: \"JUMLAH BARANG YANG DIATAS 250\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: [y, \" : \", x]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: props.errorInventoryList ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.errorInventoryList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n        color: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = AnalitikComponent;\nexport default connect(mapStateToProps, null)(AnalitikComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"AnalitikComponent\");","map":{"version":3,"sources":["H:/KULIAH/ReactJS/Login/frontend2/src/components/AnalitikComponent.js"],"names":["React","Spinner","Card","Container","Row","Col","connect","swal","deleteLogging","handleClick","dispatch","id","title","icon","buttons","dangerMode","then","willDelete","SearchBar","Search","defaultSorted","dataField","order","mapStateToProps","state","getInventoryList","inventorys","errorInventoryList","HitungInventory","length","AnalitikComponent","props","x","y","i","qty"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Spinner } from \"reactstrap\";\r\nimport { Card, Container, Row, Col } from \"react-bootstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { deleteLogging } from \"../actions/inventoryAction\";\r\n\r\nconst handleClick = (dispatch, id) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deleteLogging(id));\r\n      swal(\"Data Inventory Sukses dihapus\", {\r\n        icon: \"success\",\r\n      });\r\n    } else {\r\n      swal(\"Data gagal dihapus\");\r\n    }\r\n  });\r\n};\r\n\r\nconst { SearchBar } = Search;\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"id\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getInventoryList: state.inventorys.getInventoryList,\r\n    errorInventoryList: state.inventorys.errorInventoryList,\r\n    HitungInventory: state.inventorys.getInventoryList.length,\r\n  };\r\n};\r\n\r\nconst AnalitikComponent = (props) => {\r\n  let x = 0;\r\n  var y = \"{props.getInventoryList[0].qty}\";\r\n  for (let i = 0; i < props.HitungInventory; i++) {\r\n    x = x + props.getInventoryList[i].qty;\r\n  }\r\n\r\n\r\n  return (\r\n    <Container>\r\n      {props.getInventoryList ? (\r\n          <div>\r\n          <Row>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>JUMLAH BARANG YANG DIBAWAH 50</Card.Title>\r\n                  <Card.Text>\r\n                    {x} : {x}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n            <Col>\r\n              <Card>\r\n                <Card.Body className=\"text-center\">\r\n                  <Card.Title>JUMLAH BARANG YANG DIATAS 250</Card.Title>\r\n                  <Card.Text>\r\n                    {y} : {x}\r\n                  </Card.Text>\r\n                </Card.Body>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorInventoryList ? (\r\n            <h4>{props.errorInventoryList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(AnalitikComponent);\r\n"]},"metadata":{},"sourceType":"module"}