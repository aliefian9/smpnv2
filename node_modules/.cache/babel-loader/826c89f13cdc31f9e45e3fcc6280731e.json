{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\KULIAH\\\\ReactJS\\\\Login\\\\frontend2\\\\src\\\\components\\\\TableComponent.js\";\nimport React from \"react\";\nimport BootstrapTable from \"react-bootstrap-table-next\";\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faInfo, faEdit, faTrash, faPlus } from \"@fortawesome/free-solid-svg-icons\";\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport swal from \"sweetalert\";\nimport { deleteInventory } from \"../actions/inventoryAction\";\nconst {\n  SearchBar\n} = Search;\n\nconst handleClick = (dispatch, id) => {\n  swal({\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\n    icon: \"warning\",\n    buttons: true,\n    dangerMode: true\n  }).then(willDelete => {\n    if (willDelete) {\n      dispatch(deleteInventory(id));\n      swal(\"Data Inventoruy Sukses dihapus\", {\n        icon: \"success\"\n      });\n    } else {\n      swal(\"Data gagal dihapus\");\n    }\n  });\n};\n\nconst defaultSorted = [{\n  dataField: \"logical_uid\",\n  order: \"asc\"\n}];\n\nconst mapStateToProps = state => {\n  return {\n    getInventorysList: state.inventorys.getInventorysList,\n    errorInventorysList: state.inventorys.errorInventorysList\n  };\n};\n\nconst TableComponent = props => {\n  const columns = [{\n    dataField: \"logical_uid\",\n    text: \"ID\",\n    sort: true,\n    headerStyle: () => {\n      return {\n        width: \"10%\"\n      };\n    }\n  }, {\n    dataField: \"name\",\n    text: \"Nama\",\n    sort: true\n  }, {\n    dataField: \"qty\",\n    text: \"Jumlah\",\n    sort: true,\n    headerStyle: () => {\n      return {\n        width: \"10%\"\n      };\n    }\n  }, {\n    dataField: \"link\",\n    text: \"Action\",\n    formatter: (rowContent, row) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"detail/\" + row.id,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"dark\",\n            className: \"mr-2\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faInfo\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this), \" Detail\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"edit/\" + row.id,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"dark\",\n            className: \"mr-2\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faEdit\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this), \" Edit\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"dark\",\n          className: \"mr-2\",\n          onClick: () => handleClick(props.dispatch, row.id),\n          children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faTrash\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \" Delete\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: props.getInventorysList ? /*#__PURE__*/_jsxDEV(ToolkitProvider, {\n      bootstrap4: true,\n      keyField: \"id\",\n      data: props.getInventorysList,\n      columns: columns,\n      defaultSorted: defaultSorted,\n      search: true,\n      children: props => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/create\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                color: \"dark\",\n                className: \"mr-2\",\n                children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                  icon: faPlus\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 23\n                }, this), \" Create\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"float-right\",\n              children: /*#__PURE__*/_jsxDEV(SearchBar, { ...props.searchProps,\n                placeholder: \"Search ..\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(BootstrapTable, { ...props.baseProps,\n          pagination: paginationFactory()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: props.errorInventorysList ? /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: props.errorInventorysList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Spinner, {\n        color: \"dark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TableComponent;\nexport default connect(mapStateToProps, null)(TableComponent);\n\nvar _c;\n\n$RefreshReg$(_c, \"TableComponent\");","map":{"version":3,"sources":["H:/KULIAH/ReactJS/Login/frontend2/src/components/TableComponent.js"],"names":["React","BootstrapTable","Container","Button","Row","Col","Spinner","FontAwesomeIcon","faInfo","faEdit","faTrash","faPlus","ToolkitProvider","Search","paginationFactory","Link","connect","swal","deleteInventory","SearchBar","handleClick","dispatch","id","title","icon","buttons","dangerMode","then","willDelete","defaultSorted","dataField","order","mapStateToProps","state","getInventorysList","inventorys","errorInventorysList","TableComponent","props","columns","text","sort","headerStyle","width","formatter","rowContent","row","searchProps","baseProps"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport { Container, Button, Row, Col, Spinner } from \"reactstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faInfo,\r\n  faEdit,\r\n  faTrash,\r\n  faPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport ToolkitProvider, { Search } from \"react-bootstrap-table2-toolkit\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport swal from \"sweetalert\";\r\nimport { deleteInventory } from \"../actions/inventoryAction\";\r\n\r\nconst { SearchBar } = Search;\r\n\r\nconst handleClick = (dispatch, id) => {\r\n  swal({\r\n    title: \"Apakah Anda yakin akan menghapus data ini ?\",\r\n    icon: \"warning\",\r\n    buttons: true,\r\n    dangerMode: true,\r\n  }).then((willDelete) => {\r\n    if (willDelete) {\r\n      dispatch(deleteInventory(id));\r\n      swal(\"Data Inventoruy Sukses dihapus\", {\r\n        icon: \"success\",\r\n      });\r\n    } else {\r\n      swal(\"Data gagal dihapus\");\r\n    }\r\n  });\r\n};\r\n\r\nconst defaultSorted = [\r\n  {\r\n    dataField: \"logical_uid\",\r\n    order: \"asc\",\r\n  },\r\n];\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getInventorysList: state.inventorys.getInventorysList,\r\n    errorInventorysList: state.inventorys.errorInventorysList,\r\n  };\r\n};\r\n\r\nconst TableComponent = (props) => {\r\n  const columns = [\r\n    {\r\n      dataField: \"logical_uid\",\r\n      text: \"ID\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"10%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"name\",\r\n      text: \"Nama\",\r\n      sort: true,\r\n    },\r\n    {\r\n      dataField: \"qty\",\r\n      text: \"Jumlah\",\r\n      sort: true,\r\n      headerStyle: () => {\r\n        return { width: \"10%\" };\r\n      },\r\n    },\r\n    {\r\n      dataField: \"link\",\r\n      text: \"Action\",\r\n      formatter: (rowContent, row) => {\r\n        return (\r\n          <div>\r\n            <Link to={\"detail/\" + row.id}>\r\n              <Button color=\"dark\" className=\"mr-2\">\r\n                <FontAwesomeIcon icon={faInfo} /> Detail\r\n              </Button>\r\n            </Link>\r\n\r\n            <Link to={\"edit/\" + row.id}>\r\n              <Button color=\"dark\" className=\"mr-2\">\r\n                <FontAwesomeIcon icon={faEdit} /> Edit\r\n              </Button>\r\n            </Link>\r\n\r\n            <Button\r\n              color=\"dark\"\r\n              className=\"mr-2\"\r\n              onClick={() => handleClick(props.dispatch, row.id)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} /> Delete\r\n            </Button>\r\n          </div>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Container>\r\n      {props.getInventorysList ? (\r\n        <ToolkitProvider\r\n          bootstrap4\r\n          keyField=\"id\"\r\n          data={props.getInventorysList}\r\n          columns={columns}\r\n          defaultSorted={defaultSorted}\r\n          search\r\n        >\r\n          {(props) => (\r\n            <div>\r\n              <Row>\r\n                <Col>\r\n                  <Link to=\"/create\">\r\n                    <Button color=\"dark\" className=\"mr-2\">\r\n                      <FontAwesomeIcon icon={faPlus} /> Create\r\n                    </Button>\r\n                  </Link>\r\n                </Col>\r\n                <Col>\r\n                  <div className=\"float-right\">\r\n                    <SearchBar {...props.searchProps} placeholder=\"Search ..\" />\r\n                  </div>\r\n                </Col>\r\n              </Row>\r\n\r\n              <BootstrapTable\r\n                {...props.baseProps}\r\n                pagination={paginationFactory()}\r\n              />\r\n            </div>\r\n          )}\r\n        </ToolkitProvider>\r\n      ) : (\r\n        <div className=\"text-center\">\r\n          {props.errorInventorysList ? (\r\n            <h4>{props.errorInventorysList}</h4>\r\n          ) : (\r\n            <Spinner color=\"dark\" />\r\n          )}\r\n        </div>\r\n      )}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default connect(mapStateToProps, null)(TableComponent);\r\n"]},"metadata":{},"sourceType":"module"}