{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"H:\\\\KULIAH\\\\ReactJS\\\\Login\\\\frontend2\\\\src\\\\containers\\\\CreateInventoryContainer.js\";\nimport React, { Component } from \"react\";\nimport { Container } from \"reactstrap\";\nimport { Redirect } from \"react-router-dom\";\nimport BackComponent from \"../components/BackComponent\";\nimport FormInventory from \"../components/FormInventory\";\nimport NavbarComponent from \"../components/NavbarComponent\";\nimport { connect } from \"react-redux\";\nimport { postInventoryCreate } from \"../actions/inventoryAction\";\nimport swal from \"sweetalert\";\n\nconst mapStateToProps = state => {\n  return {\n    getResponDataInventory: state.inventorys.getResponDataInventory,\n    errorResponDataInventory: state.inventorys.errorResponDataInventory\n  };\n};\n\nclass CreateInventoryContainer extends Component {\n  constructor(props) {\n    super(props);\n    const token = localStorage.getItem(\"token\");\n    let loggedin = true;\n\n    if (token == null) {\n      loggedin = false;\n    }\n\n    this.state = {\n      loggedin\n    };\n  }\n\n  handleSubmit(data) {\n    this.props.dispatch(postInventoryCreate(data));\n  }\n\n  render() {\n    if (this.props.getResponDataInventory || this.props.errorResponDataInventory) {\n      if (this.props.errorResponDataInventory) {\n        swal(\"Failed!\", this.props.errorResponDataInventory, \"error\");\n      } else {\n        swal(\"Inventory Created!\", \"Nama : \" + this.props.getResponDataInventory.nama + \" , Umur : \" + this.props.getResponDataInventory.umur, \"success\");\n      }\n    }\n\n    if (this.state.loggedin === false) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(NavbarComponent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(BackComponent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Create Inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInventory, {\n          onSubmit: data => this.handleSubmit(data)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default connect(mapStateToProps, null)(CreateInventoryContainer);","map":{"version":3,"sources":["H:/KULIAH/ReactJS/Login/frontend2/src/containers/CreateInventoryContainer.js"],"names":["React","Component","Container","Redirect","BackComponent","FormInventory","NavbarComponent","connect","postInventoryCreate","swal","mapStateToProps","state","getResponDataInventory","inventorys","errorResponDataInventory","CreateInventoryContainer","constructor","props","token","localStorage","getItem","loggedin","handleSubmit","data","dispatch","render","nama","umur"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,4BAApC;AACA,OAAOC,IAAP,MAAiB,YAAjB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AACjC,SAAO;AACLC,IAAAA,sBAAsB,EAAED,KAAK,CAACE,UAAN,CAAiBD,sBADpC;AAELE,IAAAA,wBAAwB,EAAEH,KAAK,CAACE,UAAN,CAAiBC;AAFtC,GAAP;AAID,CALD;;AAOA,MAAMC,wBAAN,SAAuCd,SAAvC,CAAiD;AAC/Ce,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,UAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AAEA,QAAIC,QAAQ,GAAG,IAAf;;AACA,QAAIH,KAAK,IAAI,IAAb,EAAmB;AACjBG,MAAAA,QAAQ,GAAG,KAAX;AACD;;AAED,SAAKV,KAAL,GAAa;AACXU,MAAAA;AADW,KAAb;AAGD;;AACDC,EAAAA,YAAY,CAACC,IAAD,EAAO;AACjB,SAAKN,KAAL,CAAWO,QAAX,CAAoBhB,mBAAmB,CAACe,IAAD,CAAvC;AACD;;AAEDE,EAAAA,MAAM,GAAG;AACP,QACE,KAAKR,KAAL,CAAWL,sBAAX,IACA,KAAKK,KAAL,CAAWH,wBAFb,EAGE;AACA,UAAI,KAAKG,KAAL,CAAWH,wBAAf,EAAyC;AACvCL,QAAAA,IAAI,CAAC,SAAD,EAAY,KAAKQ,KAAL,CAAWH,wBAAvB,EAAiD,OAAjD,CAAJ;AACD,OAFD,MAEO;AACLL,QAAAA,IAAI,CACF,oBADE,EAEF,YACE,KAAKQ,KAAL,CAAWL,sBAAX,CAAkCc,IADpC,GAEE,YAFF,GAGE,KAAKT,KAAL,CAAWL,sBAAX,CAAkCe,IALlC,EAMF,SANE,CAAJ;AAQD;AACF;;AACD,QAAI,KAAKhB,KAAL,CAAWU,QAAX,KAAwB,KAA5B,EAAmC;AACjC,0BAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD;;AACD,wBACE;AAAA,8BACE,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,gCACE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE,QAAC,aAAD;AAAe,UAAA,QAAQ,EAAGE,IAAD,IAAU,KAAKD,YAAL,CAAkBC,IAAlB;AAAnC;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AAjD8C;;AAoDjD,eAAehB,OAAO,CAACG,eAAD,EAAkB,IAAlB,CAAP,CAA+BK,wBAA/B,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Container } from \"reactstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport BackComponent from \"../components/BackComponent\";\r\nimport FormInventory from \"../components/FormInventory\";\r\nimport NavbarComponent from \"../components/NavbarComponent\";\r\nimport { connect } from \"react-redux\";\r\nimport { postInventoryCreate } from \"../actions/inventoryAction\";\r\nimport swal from \"sweetalert\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    getResponDataInventory: state.inventorys.getResponDataInventory,\r\n    errorResponDataInventory: state.inventorys.errorResponDataInventory,\r\n  };\r\n};\r\n\r\nclass CreateInventoryContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const token = localStorage.getItem(\"token\");\r\n\r\n    let loggedin = true;\r\n    if (token == null) {\r\n      loggedin = false;\r\n    }\r\n\r\n    this.state = {\r\n      loggedin,\r\n    };\r\n  }\r\n  handleSubmit(data) {\r\n    this.props.dispatch(postInventoryCreate(data));\r\n  }\r\n\r\n  render() {\r\n    if (\r\n      this.props.getResponDataInventory ||\r\n      this.props.errorResponDataInventory\r\n    ) {\r\n      if (this.props.errorResponDataInventory) {\r\n        swal(\"Failed!\", this.props.errorResponDataInventory, \"error\");\r\n      } else {\r\n        swal(\r\n          \"Inventory Created!\",\r\n          \"Nama : \" +\r\n            this.props.getResponDataInventory.nama +\r\n            \" , Umur : \" +\r\n            this.props.getResponDataInventory.umur,\r\n          \"success\"\r\n        );\r\n      }\r\n    }\r\n    if (this.state.loggedin === false) {\r\n      return <Redirect to=\"/\" />;\r\n    }\r\n    return (\r\n      <div>\r\n        <NavbarComponent />\r\n        <Container>\r\n          <BackComponent />\r\n          <h1>Create Inventory</h1>\r\n          <FormInventory onSubmit={(data) => this.handleSubmit(data)} />\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, null)(CreateInventoryContainer);\r\n"]},"metadata":{},"sourceType":"module"}